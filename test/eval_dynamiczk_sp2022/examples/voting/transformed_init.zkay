pragma zkay ^0.3.0;

contract Voting {
    enum Result {
        A_WINS, B_WINS, TIE
    }

    address owner;
    uint32 votesForA;
    uint32 votesForB;
    mapping(address => bool) hasVoted;
    bool resultAnnounced;

    function vote(uint32 vote) public {
        require(!hasVoted[me]);
        require(!resultAnnounced);
        uint32 voteA = (vote == 0) ? 1 : 0;
        uint32 voteB = (vote == 1) ? 1 : 0;
        votesForA = votesForA + voteA;
        votesForB = votesForB + voteB;
        hasVoted[me] = true;
    }

    function declareWinner() public returns (Voting.Result) {
        require(me == owner);
        resultAnnounced = true;
        Voting.Result result;
        if (votesForA > votesForB)     result = Result.A_WINS;
         else     if (votesForB > votesForA)     result = Result.B_WINS;
             else     result = Result.TIE;
        return (result);
    }

    function initialize() public {
        owner = me;
        votesForA = 0;
        votesForB = 0;
        resultAnnounced = false;
    }
}